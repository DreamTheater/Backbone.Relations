/**
 * Backbone.Relations v0.1.5
 * https://github.com/DreamTheater/Backbone.Relations
 *
 * Copyright (c) 2013 Dmytro Nemoga
 * Released under the MIT license
 */
(function(){"use strict";var t=Backbone.Model;Backbone.Model=t.extend({_collection:Backbone.Collection.extend({initialize:function(){this.on("add",function(t,e,i){this.model.collection.add(t,i)}),this.on("remove",function(t,e,i){this.model.collection.remove(t,i)})}}),constructor:function(e,i){this.initialize=_.wrap(this.initialize,function(t,e,i){return this._relations={},t.call(this,e,i)}),t.call(this,e,i)},toJSON:_.wrap(t.prototype.toJSON,function(t,e){e=e||{};var i=t.call(this,e),n=_.extend({},e,{caller:this});return e.relations&&_.each(this._relations,function(t,o){var r;e.caller instanceof t.Model||(r=t.reference.get.call(this),i[o]=r.toJSON(n)),delete i[t.options.foreignKey]},this),i}),belongsTo:function(t,e){var i=e.foreignKey;return this._createRelation(t,{get:function(){var e=this.attributes[i];return t.collection.get(e)},set:function(t,e){return this.set(i,t.id,e)},build:function(e,i){return new t(e,i)},create:function(e,i){return t.collection.create(e,i)}},e),this},hasOne:function(t,e){var i=e.foreignKey;return this._createRelation(t,{get:function(){var e=this._makeHash(null,i);return t.collection.findWhere(e)},set:function(t,e){return t.set(i,this.id,e)},build:function(e,n){var o=this._makeHash(e,i);return new t(o,n)},create:function(e,n){var o=this._makeHash(e,i);return t.collection.create(o,n)}},e),this},hasMany:function(t,e){var i=e.foreignKey;return this._createRelation(t,{get:function(){var e=this._collection,n=this._makeHash(null,i),o=t.collection.where(n);return new e(o,{model:t})}},e),this},_createRelation:function(t,e,i){var n=i.as,o=_.string.capitalize(n),r=e.get,c=e.set,l=e.build,a=e.create;r&&(this["get"+o]=r),c&&(this["set"+o]=c),l&&(this["build"+o]=l),a&&(this["create"+o]=a),this._relations[n]={Model:t,reference:e,options:i}},_makeHash:function(t,e){var i=_.clone(t)||{};return i[e]=this.id,i}})})(),function(){"use strict";var t=Backbone.Collection;Backbone.Collection=t.extend({constructor:function(e,i){this.initialize=_.wrap(this.initialize,function(t,e,i){return this.model.collection=this,t.call(this,e,i)}),t.call(this,e,i)}})}();