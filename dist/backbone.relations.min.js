/*!
 * Backbone.Relations v0.1.3
 * https://github.com/DreamTheater/Backbone.Relations
 *
 * Copyright (c) 2013 Dmytro Nemoga
 * Released under the MIT license
 */
(function(){"use strict";var e,t;module&&module.exports&&exports?(e=require("underscore"),e.string=require("underscore.string"),t=require("backbone")):(e=window._,e.string=window._.string,t=window.Backbone);var n=t.Model;t.Model=n.extend({_RelatedModels:t.Collection.extend({initialize:function(){this.on("add",function(e,t,n){this.model.collection.add(e,n)}),this.on("remove",function(e,t,n){this.model.collection.remove(e,n)})}}),constructor:function(){this._relations={},n.apply(this,arguments),this.collection&&(this.constructor.collection=this.collection)},belongsTo:function(e,t){var n=t.foreignKey;return this._createRelation(e,{get:function(){var t=this.attributes[n];return e.collection.get(t)},set:function(e,t){return this.set(n,e.id,t)},build:function(t,n){return new e(t,n)},create:function(t,n){return e.collection.create(t,n)}},t),this},hasOne:function(e,t){var n=t.foreignKey;return this._createRelation(e,{get:function(){var t=this._makeHash(null,n);return e.collection.findWhere(t)},set:function(e,t){return e.set(n,this.id,t)},build:function(t,i){var r=this._makeHash(t,n);return new e(r,i)},create:function(t,i){var r=this._makeHash(t,n);return e.collection.create(r,i)}},t),this},hasMany:function(e,t){var n=t.foreignKey;return this._createRelation(e,{get:function(){var t=this._RelatedModels,i=this._makeHash(null,n),r=e.collection.where(i);return new t(r,{model:e})}},t),this},toJSON:e.wrap(n.prototype.toJSON,function(t,n){n=n||{};var i=t.call(this,n),r=e.extend({},n,{caller:this});return n.relations&&e.each(this._relations,function(e,t){var o,s=e.Model;n.caller instanceof s||(o=e.reference.get.call(this),i[t]=o.toJSON(r)),delete i[e.options.foreignKey]},this),i}),_createRelation:function(t,n,i){var r=e.string.capitalize(i.as);n.get&&(this["get"+r]=n.get),n.set&&(this["set"+r]=n.set),n.build&&(this["build"+r]=n.build),n.create&&(this["create"+r]=n.create),this._relations[i.as]={Model:t,reference:n,options:i}},_makeHash:function(t,n){var i=e.clone(t)||{};return i[n]=this.id,i}})})();